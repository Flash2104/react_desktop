{"version":3,"file":"index.js","mappings":";;;;;;;;;;AAAa;AACb,iBAAiB,mBAAO,CAAC,0BAAU;;AAEnC;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;ACVA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;ACNA;AACA;AACA,IAAIG,UAAU,GAAG,IAAjB,EACA;;AAGA,eAAeC,YAAf,GAA8B;AAC5BD,EAAAA,UAAU,GAAG,IAAIF,mDAAJ,CAAkB;AAC7BI,IAAAA,KAAK,EAAE,GADsB;AAE7BC,IAAAA,MAAM,EAAE,GAFqB;AAG7BC,IAAAA,SAAS,EAAE,IAHkB;AAI7B;AACA;AACAC,IAAAA,cAAc,EAAE;AACdC,MAAAA,OAAO,EAAEC,4FADK;AAC8B;AAC5CC,MAAAA,QAAQ,EAAET,4CAAKA;AAFD;AANa,GAAlB,CAAb;AAWAC,EAAAA,UAAU,CAACS,OAAX,CAAmBC,mCAAnB,EAZ4B,CAa5B;;AACA,MAAIX,4CAAJ,EAAW;AACTC,IAAAA,UAAU,CAACW,WAAX,CAAuBC,YAAvB;AACD,GAhB2B,CAkB5B;;;AACAZ,EAAAA,UAAU,CAACa,EAAX,CAAc,QAAd,EAAwB,MAAM;AAC5B;AACA;AACA;AACAb,IAAAA,UAAU,GAAG,IAAb;AACD,GALD;AAMD,EAED;AACA;AACA;;;AACAH,mDAAA,GAAgBkB,IAAhB,CAAqB,MAAM;AACzBd,EAAAA,YAAY;AAEZJ,EAAAA,4CAAA,CAAO,UAAP,EAAmB,YAAY;AAC7B;AACA;AACA,QAAIC,iEAAA,GAA8BmB,MAA9B,KAAyC,CAA7C,EAAgD;AAC9ChB,MAAAA,YAAY;AACb;AACF,GAND;AAOD,CAVD,GAYA;AACA;AACA;;AACAJ,4CAAA,CAAO,mBAAP,EAA4B,YAAY;AACtC,MAAIqB,OAAO,CAACC,QAAR,KAAqB,QAAzB,EAAmC;AACjCtB,IAAAA,8CAAA;AACD;AACF,CAJD,GAMA;AACA;AACA;;AACA,MAAMwB,6BAA6B,GAAG,6BAAtC;AACAxB,4CAAA,CAAO,sBAAP,EAA+B,CAACyB,KAAD,EAAQC,QAAR,KAAqB;AAClDA,EAAAA,QAAQ,CAACV,EAAT,CAAY,eAAZ,EAA6B,CAACW,EAAD,EAAKC,aAAL,KAAuB;AAClD,UAAMC,SAAS,GAAG,IAAIC,GAAJ,CAAQF,aAAR,CAAlB;;AAEA,QAAI,CAACJ,6BAA6B,CAACO,QAA9B,CAAuCF,SAAS,CAACG,MAAjD,CAAL,EAA+D;AAC7DP,MAAAA,KAAK,CAACQ,cAAN;AACD;AACF,GAND;AAOD,CARD,E","sources":["webpack://src_electron/./node_modules/electron-is-dev/index.js","webpack://src_electron/external node-commonjs \"electron\"","webpack://src_electron/webpack/bootstrap","webpack://src_electron/webpack/runtime/compat get default export","webpack://src_electron/webpack/runtime/define property getters","webpack://src_electron/webpack/runtime/hasOwnProperty shorthand","webpack://src_electron/webpack/runtime/make namespace object","webpack://src_electron/./app/electron/main.ts"],"sourcesContent":["'use strict';\nconst electron = require('electron');\n\nif (typeof electron === 'string') {\n\tthrow new TypeError('Not running in an Electron environment!');\n}\n\nconst isEnvSet = 'ELECTRON_IS_DEV' in process.env;\nconst getFromEnv = Number.parseInt(process.env.ELECTRON_IS_DEV, 10) === 1;\n\nmodule.exports = isEnvSet ? getFromEnv : !electron.app.isPackaged;\n","module.exports = require(\"electron\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { app, BrowserWindow } from \"electron\";\r\nimport * as isDev from \"electron-is-dev\";\r\nlet mainWindow = null;\r\n// Create the native browser window.\r\ndeclare const MAIN_WINDOW_WEBPACK_ENTRY: string;\r\ndeclare const MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY: string;\r\nasync function createWindow() {\r\n  mainWindow = new BrowserWindow({\r\n    width: 800,\r\n    height: 600,\r\n    darkTheme: true,\r\n    // Set the path of an additional \"preload\" script that can be used to\r\n    // communicate between node-land and browser-land.\r\n    webPreferences: {\r\n      preload: MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY, // path.join(__dirname, \"preload.js\"),\r\n      devTools: isDev,\r\n    },\r\n  });\r\n  mainWindow.loadURL(MAIN_WINDOW_WEBPACK_ENTRY);\r\n  // Automatically open Chrome's DevTools in development mode.\r\n  if (isDev) {\r\n    mainWindow.webContents.openDevTools();\r\n  }\r\n\r\n  // Emitted when the window is closed.\r\n  mainWindow.on(\"closed\", () => {\r\n    // Dereference the window object, usually you would store windows\r\n    // in an array if your app supports multi windows, this is the time\r\n    // when you should delete the corresponding element.\r\n    mainWindow = null;\r\n  });\r\n}\r\n\r\n// This method will be called when Electron has finished its initialization and\r\n// is ready to create the browser windows.\r\n// Some APIs can only be used after this event occurs.\r\napp.whenReady().then(() => {\r\n  createWindow();\r\n\r\n  app.on(\"activate\", function () {\r\n    // On macOS it's common to re-create a window in the app when the\r\n    // dock icon is clicked and there are no other windows open.\r\n    if (BrowserWindow.getAllWindows().length === 0) {\r\n      createWindow();\r\n    }\r\n  });\r\n});\r\n\r\n// Quit when all windows are closed, except on macOS.\r\n// There, it's common for applications and their menu bar to stay active until\r\n// the user quits  explicitly with Cmd + Q.\r\napp.on(\"window-all-closed\", function () {\r\n  if (process.platform !== \"darwin\") {\r\n    app.quit();\r\n  }\r\n});\r\n\r\n// If your app has no need to navigate or only needs to navigate to known pages,\r\n// it is a good idea to limit navigation outright to that known scope,\r\n// disallowing any other kinds of navigation.\r\nconst allowedNavigationDestinations = \"https://my-electron-app.com\";\r\napp.on(\"web-contents-created\", (event, contents) => {\r\n  contents.on(\"will-navigate\", (ev, navigationUrl) => {\r\n    const parsedUrl = new URL(navigationUrl);\r\n\r\n    if (!allowedNavigationDestinations.includes(parsedUrl.origin)) {\r\n      event.preventDefault();\r\n    }\r\n  });\r\n});\r\n"],"names":["app","BrowserWindow","isDev","mainWindow","createWindow","width","height","darkTheme","webPreferences","preload","MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY","devTools","loadURL","MAIN_WINDOW_WEBPACK_ENTRY","webContents","openDevTools","on","whenReady","then","getAllWindows","length","process","platform","quit","allowedNavigationDestinations","event","contents","ev","navigationUrl","parsedUrl","URL","includes","origin","preventDefault"],"sourceRoot":""}